//go:build !ignore_autogenerated
// +build !ignore_autogenerated

// Code generated by conversion-gen. DO NOT EDIT.

package v1beta1

import (
	config "github.com/kosmos.io/kosmos/pkg/apis/config"
	conversion "k8s.io/apimachinery/pkg/conversion"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

func init() {
	localSchemeBuilder.Register(RegisterConversions)
}

// RegisterConversions adds conversion functions to the given scheme.
// Public to allow building arbitrary schemes.
func RegisterConversions(s *runtime.Scheme) error {
	if err := s.AddGeneratedConversionFunc((*KNodeDistributionArgs)(nil), (*config.KNodeDistributionArgs)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1beta1_KNodeDistributionArgs_To_config_KNodeDistributionArgs(a.(*KNodeDistributionArgs), b.(*config.KNodeDistributionArgs), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*config.KNodeDistributionArgs)(nil), (*KNodeDistributionArgs)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_config_KNodeDistributionArgs_To_v1beta1_KNodeDistributionArgs(a.(*config.KNodeDistributionArgs), b.(*KNodeDistributionArgs), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*KNodeVolumeBindingArgs)(nil), (*config.KNodeVolumeBindingArgs)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1beta1_KNodeVolumeBindingArgs_To_config_KNodeVolumeBindingArgs(a.(*KNodeVolumeBindingArgs), b.(*config.KNodeVolumeBindingArgs), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*config.KNodeVolumeBindingArgs)(nil), (*KNodeVolumeBindingArgs)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_config_KNodeVolumeBindingArgs_To_v1beta1_KNodeVolumeBindingArgs(a.(*config.KNodeVolumeBindingArgs), b.(*KNodeVolumeBindingArgs), scope)
	}); err != nil {
		return err
	}
	return nil
}

func autoConvert_v1beta1_KNodeDistributionArgs_To_config_KNodeDistributionArgs(in *KNodeDistributionArgs, out *config.KNodeDistributionArgs, s conversion.Scope) error {
	out.KubeConfigPath = in.KubeConfigPath
	return nil
}

// Convert_v1beta1_KNodeDistributionArgs_To_config_KNodeDistributionArgs is an autogenerated conversion function.
func Convert_v1beta1_KNodeDistributionArgs_To_config_KNodeDistributionArgs(in *KNodeDistributionArgs, out *config.KNodeDistributionArgs, s conversion.Scope) error {
	return autoConvert_v1beta1_KNodeDistributionArgs_To_config_KNodeDistributionArgs(in, out, s)
}

func autoConvert_config_KNodeDistributionArgs_To_v1beta1_KNodeDistributionArgs(in *config.KNodeDistributionArgs, out *KNodeDistributionArgs, s conversion.Scope) error {
	out.KubeConfigPath = in.KubeConfigPath
	return nil
}

// Convert_config_KNodeDistributionArgs_To_v1beta1_KNodeDistributionArgs is an autogenerated conversion function.
func Convert_config_KNodeDistributionArgs_To_v1beta1_KNodeDistributionArgs(in *config.KNodeDistributionArgs, out *KNodeDistributionArgs, s conversion.Scope) error {
	return autoConvert_config_KNodeDistributionArgs_To_v1beta1_KNodeDistributionArgs(in, out, s)
}

func autoConvert_v1beta1_KNodeVolumeBindingArgs_To_config_KNodeVolumeBindingArgs(in *KNodeVolumeBindingArgs, out *config.KNodeVolumeBindingArgs, s conversion.Scope) error {
	out.BindTimeoutSeconds = in.BindTimeoutSeconds
	return nil
}

// Convert_v1beta1_KNodeVolumeBindingArgs_To_config_KNodeVolumeBindingArgs is an autogenerated conversion function.
func Convert_v1beta1_KNodeVolumeBindingArgs_To_config_KNodeVolumeBindingArgs(in *KNodeVolumeBindingArgs, out *config.KNodeVolumeBindingArgs, s conversion.Scope) error {
	return autoConvert_v1beta1_KNodeVolumeBindingArgs_To_config_KNodeVolumeBindingArgs(in, out, s)
}

func autoConvert_config_KNodeVolumeBindingArgs_To_v1beta1_KNodeVolumeBindingArgs(in *config.KNodeVolumeBindingArgs, out *KNodeVolumeBindingArgs, s conversion.Scope) error {
	out.BindTimeoutSeconds = in.BindTimeoutSeconds
	return nil
}

// Convert_config_KNodeVolumeBindingArgs_To_v1beta1_KNodeVolumeBindingArgs is an autogenerated conversion function.
func Convert_config_KNodeVolumeBindingArgs_To_v1beta1_KNodeVolumeBindingArgs(in *config.KNodeVolumeBindingArgs, out *KNodeVolumeBindingArgs, s conversion.Scope) error {
	return autoConvert_config_KNodeVolumeBindingArgs_To_v1beta1_KNodeVolumeBindingArgs(in, out, s)
}

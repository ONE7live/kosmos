---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: {{ include "node-local-dns.name" . }}
  namespace: {{ include "node-local-dns.namespace" . }}
  labels:
    k8s-app: {{ include "node-local-dns.name" . }}
    kubernetes.io/cluster-service: "true"
    addonmanager.kubernetes.io/mode: Reconcile
spec:
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 10%
  selector:
    matchLabels:
      k8s-app: {{ include "node-local-dns.name" . }}
  template:
    metadata:
      labels:
        k8s-app: {{ include "node-local-dns.name" . }}
      annotations:
        prometheus.io/port: "9253"
        prometheus.io/scrape: "true"
    spec:
      priorityClassName: system-node-critical
      serviceAccountName: {{ include "node-local-dns.name" . }}
      hostNetwork: true
      dnsPolicy: Default  # Don't use cluster DNS.
      tolerations:
        {{- toYaml .Values.tolerations | nindent 8 }}
      containers:
        - name: node-cache
          image: "{{ .Values.image.repository }}:{{ default .Chart.AppVersion .Values.image.version }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          args: [ "-localip", "{{ .Values.configMap.localDNS }},{{ .Values.configMap.kubeDNS }}", "-conf", "/etc/Corefile", "-upstreamsvc", "kube-dns-upstream" ]
          securityContext:
            capabilities:
              add:
                - NET_ADMIN
          ports:
            - containerPort: 53
              name: dns
              protocol: UDP
            - containerPort: 53
              name: dns-tcp
              protocol: TCP
            - containerPort: 9253
              name: metrics
              protocol: TCP
          livenessProbe:
            httpGet:
              host: {{ .Values.configMap.localDNS }}
              path: /health
              port: 8080
            initialDelaySeconds: 60
            timeoutSeconds: 5
          volumeMounts:
            - mountPath: /run/xtables.lock
              name: xtables-lock
              readOnly: false
            - name: config-volume
              mountPath: /etc/coredns
            - name: kube-dns-config
              mountPath: /etc/kube-dns
      volumes:
        - name: xtables-lock
          hostPath:
            path: /run/xtables.lock
            type: FileOrCreate
        - name: kube-dns-config
          configMap:
            name: kube-dns
            optional: true
        - name: config-volume
          configMap:
            name: {{ include "node-local-dns.name" . }}
            items:
              - key: Corefile
                path: Corefile.base